#Kabanero! on activate substitute StackId for text 'StackId'
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: StackId-build-task
spec:
  resources:
    inputs:
    - name: git-source
      type: git
    - name: docker-image
      type: image
    outputs:
    - name: docker-image
      type: image
  params:
  - name: docker-imagename
    type: string
    default: ""
  - name: docker-imagetag
    type: string
    default: ""
  steps:
  - name: build
    securityContext:
      privileged: true
    image: kabanero/kabanero-utils:0.9.0
    command: ["/bin/bash"]
    args:
      - -c
      - |
        #executing the insecure_registry_setup.sh script if exists, to add internal registry to insecure registry list
        echo "Running the script /scripts/insecure_registry_setup.sh ...."
        /scripts/insecure_registry_setup.sh
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "The script failed(/scripts/insecure_registry_setup.sh)" >&2
           exit $retVal
        fi

        #executing the ca_certs_setup.sh script if exists, to add additional trusted ca certs to /etc/docker/certs.d/<hosname>/ca.crt
        echo "Running the script /scripts/ca_certs_setup.sh ...."
        /scripts/ca_certs_setup.sh
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "The script failed(/scripts/ca_certs_setup.sh)" >&2
           exit $retVal
        fi
        
        OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE=$( /scripts/imageurl_imagename_lowercase.sh -u $(inputs.resources.docker-image.url) -n $(inputs.params.docker-imagename) -t $(inputs.params.docker-imagetag) )
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "The script failed(/scripts/imageurl_imagename_lowercase.sh) Reason: $OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE" >&2
           exit $retVal
        fi
        
        OUTPUTS_STACK_IMAGE_REGISTRY_URL=$( /scripts/stack_registry_url_setup.sh )
        retVal=$?
        if [ $retVal -ne 0 ]
        then
           echo "The script failed(/scripts/stack_registry_url_setup.sh) Reason: $OUTPUTS_STACK_IMAGE_REGISTRY_URL" >&2
           exit $retVal
        fi

        echo "OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE=$OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE"
        echo "OUTPUTS_STACK_IMAGE_REGISTRY_URL that will be used to pull the stack =$OUTPUTS_STACK_IMAGE_REGISTRY_URL"
         
        cd /workspace/$gitsource
        appsody build -t "$OUTPUTS_RESOURCE_DOCKER_IMAGE_URL_LOWERCASE" --buildah --buildah-options "--format=docker" --stack-registry "$OUTPUTS_STACK_IMAGE_REGISTRY_URL"
        if [ $? != 0 ]; then
            echo "Appsody build failed.  Please review the appsody build logs above.  Pipeline run aborted."
            exit 1
        fi
    env:
    - name: gitsource
      value: git-source
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
  volumes:
  - name: varlibcontainers
    emptyDir: {}
